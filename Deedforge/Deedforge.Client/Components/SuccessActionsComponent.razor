@using Deedforge.Client.Helpers
@using Deedforge.Domain.AdditionalEntities
@using Deedforge.Domain.CoreRules
@using Deedforge.Domain.Gear.Weapons

@if (Actions != null)
{
    foreach (var action in Actions)
    {
        <MudCard Class="my-8">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudGrid Justify="Justify.SpaceBetween">
                        <MudItem xs="7">
                            <MudText Typo="Typo.h5">
                                @action.Name
                            </MudText>
                            <br />
                            @if (action.Skills.Any())
                            {
                                <MudText Typo="Typo.h6">Skill: <i>@MarkupStringHelper.GetStringsWithCommas(@action.Skills.Select(x => x.Name).ToList())</i></MudText>
                            }
                            else
                            {
                                <MudText Typo="Typo.h6">Skill: <i>Any Skill</i></MudText>
                            }
                            <br />
                            <MudText Typo="Typo.body1">
                                <i>@action.Description</i>
                            </MudText>
                        </MudItem>
                        <MudItem xs="5" Style="text-align: right">
                            <MudText Typo="Typo.h6">@MarkupStringHelper.GetStringsWithCommas(@action.ActionTypes.Select(x => x.ToString()).ToList())</MudText>
                            @if (action.Range != 0)
                            {
                                <br />
                                <MudText Typo="Typo.body1">Range: <i>@action.Range</i></MudText>
                            }
                            <br />
                            <MudText Typo="Typo.body1">Challenge Modifier: <i>@action.ChallengeModifier</i></MudText>
                        </MudItem>
                    </MudGrid>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid Justify="Justify.Center" Class="py-8">
                    <MudItem xs="3">
                        <MudText Typo="Typo.h6">
                            Fumbled Success
                        </MudText>
                        <MudDivider Class="my-2" />
                        <MudText Typo="Typo.body1">
                            @action.Tier1
                        </MudText>
                    </MudItem>
                    <MudItem xs="3">
                        <MudText Typo="Typo.h6">
                            Basic Success
                        </MudText>
                        <MudDivider Class="my-2" />
                        <MudText Typo="Typo.body1">
                            @action.Tier2
                        </MudText>
                    </MudItem>
                    <MudItem xs="3">
                        <MudText Typo="Typo.h6">
                            Superior Success
                        </MudText>
                        <MudDivider Class="my-2" />
                        <MudText Typo="Typo.body1">
                            @action.Tier3
                        </MudText>
                    </MudItem>
                    <MudItem xs="3">
                        <MudText Typo="Typo.h6">
                            Critical Success
                        </MudText>
                        <MudDivider Class="my-2" />
                        <MudText Typo="Typo.body1">
                            @action.Tier4
                        </MudText>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    }
}
else
{
    <p>Action not provided.</p>
}

@code {
    [Parameter]
    public List<SuccessAction>? Actions { get; set; }
}
